<?xml version="1.0" encoding="UTF-8" ?>
<project name="CalSync" default="run" basedir=".">
  <description>Conference Romm Booking Synchronization</description>
  <property file="build.properties" />
  <echo message="Build properties..."/>
  <echo message="Appl Name : ${app.name}"/>
  <echo message="Appl Ver : ${app.version}"/>
  <echo message="Src Dir : ${src.dir}"/>
  <echo message="Build Dir : ${build.dir}"/>
  <echo message="Classes Dir : ${classes.dir}"/>
  <echo message="Archive Dir : ${jar.dir}"/>
  <echo message="Lib Dir : ${lib.dir}"/>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

  <!-- Initialization -->
  <target name="init" description="Prepare needed directories.">
    <echo message="Prepare needed directories ..."/>
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${jar.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${lib.dir}" />
  </target>

  <!-- Cleanup -->
  <target name="clean" description="Remove all files created by the build/test process.">
    <echo message="Remove all files created by the build/test process ..."/>
    <delete dir="${classes.dir}"/>
    <delete dir="${jar.dir}" />
    <delete dir="${dist.dir}" />
  </target>

  <!-- Compile application -->
  <target name="compile">
    <echo message="Compiling all sources ..."/>
    <delete dir="${classes.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes" classpathref="classpath" includeantruntime="false">
    </javac>
  </target>

  <target name="post-jar">
    <mkdir dir="${classes.dir}/resources"/>
    <mkdir dir="${classes.dir}/lib"/>
    <copy todir="${classes.dir}/lib" overwrite="true">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy todir="${classes.dir}/resources" overwrite="true">
      <fileset dir="${src.dir}/resources"/>
    </copy>
    <copy file="${src.dir}/resources/log4j.xml" tofile="${classes.dir}/log4j.xml" overwrite="true" />
  </target>

  <!-- Java Archive -->
  <!--property name="jar.class.path" value="${toString:classpath}"/-->
  <target name="jar" depends="compile,post-jar">
    <!--<delete file="${jar.dir}/${app.name}-${app.version}.jar"/>-->
    <echo message="Packaging application ..."/>
    <delete dir="${jar.dir}"/>
    <mkdir dir="${jar.dir}"/>
    <mkdir dir="${jar.dir}/lib"/>
    <mkdir dir="${jar.dir}/resources"/>
    <copy todir="${jar.dir}/lib" overwrite="true">
      <fileset dir="${lib.dir}"/>
    </copy>
    <copy todir="${jar.dir}/resources" overwrite="true">
      <fileset dir="${src.dir}/resources"/>
    </copy>
    <path id="classpath-all">
      <!--fileset dir="${jar.dir}/lib" includes="**/*.jar"/-->
      <!--fileset dir="${jar.dir}/resources" includes="**/*.*"/-->
      <!--pathelement location="${jar.dir}/lib"/-->
      <pathelement location="${jar.dir}/resources"/>
    </path>

    <manifestclasspath jarfile="${jar.dir}/${app.name}-${app.version}.jar" property="manifest.class.path">
      <classpath refid="classpath-all"/>
    </manifestclasspath>

    <jar destfile="${jar.dir}/${app.name}-${app.version}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Class-Path" value="${manifest.class.path}"/>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
    <!--delete dir="${jar.dir}/resources"/-->
    <!--delete dir="${jar.dir}/lib"/-->

    <jar destfile="${jar.dir}/${app.name}-${app.version}_it.jar">
        <zipgroupfileset dir="${jar.dir}" includes="${app.name}-${app.version}.jar"/>
        <zipgroupfileset dir="${jar.dir}/lib" includes="*.jar"/>
        <manifest>
            <attribute name="Class-Path" value="${manifest.class.path}"/>
            <attribute name="Main-Class" value="${main.class}"/>
        </manifest>
    </jar>
    <delete dir="${jar.dir}/lib"/>
    <!--copy todir="${lib.dir}" overwrite="true">
      <fileset dir="${jar.dir}"/>
    </copy-->
  </target>

  <!-- Run application -->
  <target name="run" depends="jar">
    <echo message="Executing ${main.class} ..."/>
    <mkdir dir="${jar.dir}/logs"/>
    <java jar="${jar.dir}/${app.name}-${app.version}_it.jar" fork="true">
    </java>

    <!--
    <java fork="true" classname="${main.class}">
      <classpath>
         <path refid="classpath"/>
         <path location="${jar.dir}/${app.name}-${app.version}.jar"/>
      </classpath>
    </java>
    -->
  </target>
</project>
